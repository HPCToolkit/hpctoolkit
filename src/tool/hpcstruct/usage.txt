Description:
  hpcstruct recovers the program structure for all CPU and GPU
  binaries referenced by a directory containing HPCToolkit performance
  measurements. If needed, one can apply hpcstruct to recover program
  structure for an individual CPU or GPU binary.

  Program structure is a mapping from addresses of machine instructions
  in a binary to source code contexts; this mapping is used to attribute
  measured performance metrics back to source code. A strength of
  hpcstruct is its ability to attribute metrics to inlined functions
  and loops; such mappings are especially useful for understanding the
  performance of programs generated using template-based programming
  models.

  hpcstruct is designed for analysis of optimized binaries created from
  C, C++, Fortran, CUDA, HIP, and DPC++ source code. Because hpcstruct's
  algorithms exploit the line map and debug information recorded in an
  application binary during compilation, for best results, we recommend that
  binaries be compiled with standard debug information or at a minimum,
  line map information. Typically, this is accomplished by pasing a '-g'
  option to each compiler along with any optimization flags. See the
  HPCToolkit manual for more information.

  To accelerate analysis of a measurement directory, which contains
  references to an application as well as any shared libraries
  and/or GPU binaries it uses, hpcstruct employs multiple threads by
  default. Multiple small binaries are analyzed concurrently, using one
  thread per binary.  By default, this analysis will use half of the
  threads in the CPU set for the process. Binaries larger than a certain
  threshold (see the --psize option and its default) are analyzed using
  multiple threads. By default, large binaries will be analyzed using
  min(half of the threads in the CPU set for the process, 16) threads.

Options: General
  -V, --version        Print version information.
  -h, --help           Print this help message.

Options: Control caching of structure files
  -c <dir>, --cache <dir> Specify that structure files for CPU and GPU
                       binaries should be cached and reused in
                       directory <dir>. Overrides any default setting in
                       the HPCTOOLKIT_HPCSTRUCT_CACHE environment variable.
  --nocache            Specify that a structure cache should not be used,
                       even if the HPCTOOLKIT_HPCSTRUCT_CACHE environment
                       variable is set. With this option, advice to use
                       a structure cache will be suppressed.

Options: Override parallelism defaults
  -j <num>, --jobs <num> Use <num> threads for for concurrent analysis of
                       small binaries. Use <num> threads for parallel
                       analysis of binaries of greater than <psize>.
  --psize <psize>      Size (bytes) of a binary that will cause hpcstruct
                       to use threads to analyze a binary in parallel.
                       Binaries with fewer than <psize> bytes will be analyzed
                       concurrently, {100000000}

Options: Override structure recovery defaults
  --cpu <yes/no>       Analyze CPU binaries referenced by a measurements
                       directory. {yes} 
  --gpu <yes/no>       Analyze GPU binaries referenced by a measurements
                       directory. {yes} 
  --gpucfg <yes/no>    Compute loop nesting structure for GPU machine code.
                       Loop nesting structure is only useful with
                       instruction-level measurements collected using PC
                       sampling or instrumentation. {no} 


Options: Specify output file when analyzing a single binary
  -o <file>, --output <file>
                       Write hpcstruct file to <file>.
                       Use '--output=-' to write output to stdout.
                       Note: this option may only be used when analyzing
                       a single binary.

Options: Developers only
  --jobs-struct <num>  Use <num> threads for the MakeStructure() phase only.
  --jobs-parse  <num>  Use <num> threads for the ParseAPI::parse() phase only.
  --jobs-symtab <num>  Use <num> threads for the Symtab phase (if possible).
  --show-gaps          Feature to show unclaimed vma ranges (gaps)
                       in the control-flow graph.
  --time               Display stats on hpcstruct's time and space usage.
