Force symtab to use our top-level choice for CC, CXX and flags instead
of it choosing its own version of gcc, g++.  We add the HPC_ variables
to make.config.local during configure.


diff -Naurb SymtabAPI-8.0.orig/make.config SymtabAPI-8.0/make.config
--- SymtabAPI-8.0.orig/make.config	2012-11-20 15:32:26.000000000 -0600
+++ SymtabAPI-8.0/make.config	2012-11-29 17:58:08.000000000 -0600
@@ -89,25 +89,26 @@
 # But if the file doesn't exist there (i.e. if the user hasn't checked them out
 # with cvs), then we should look in a backup location.  That's what this vrble
 # is about.  It's used several times below in this file.
-ifeq ($(PLATFORM),ppc32_bgl_compute)
+ifeq (x,y)
 GCC         = mpgcc
 GXX         = mpg++
 CC          = mpgcc
 CXX         = mpg++
 endif
-ifeq ($(PLATFORM),ppc32_bgp_compute)
+ifeq (x,y)
 GCC         = powerpc-bgp-linux-gcc
 GXX         = powerpc-bgp-linux-g++
 CC          = powerpc-bgp-linux-gcc
 CXX         = powerpc-bgp-linux-g++
 endif
 
-GCC      ?= gcc
-GXX      ?= g++
+CC  = $(HPC_CC)
+GCC = $(HPC_CC)
+CXX = $(HPC_CXX)
+GXX = $(HPC_CXX)
+
 LINKER   = ld
 AS      	= as
-CC       ?= $(GCC)
-CXX      ?= $(GXX)
 LEX      = flex
 RANLIB   = ranlib
 AR       = ar
@@ -570,8 +571,8 @@
 endif
 
 # flags for normal (non-kludge) files, with common warnings
-CFLAGS		= $(IFLAGS) $(UNIFIED_DEF) $(OPT_FLAG) $(COMMON_WARNINGS) $(ARCH_FLAGS)
-CXXFLAGS	= $(IFLAGS) $(UNIFIED_DEF) $(OPT_FLAG) $(COMMON_WARNINGS) $(STDINT_MACROS) $(ARCH_FLAGS)
+CFLAGS		= $(HPC_CFLAGS)   $(IFLAGS) $(UNIFIED_DEF) $(OPT_FLAG) $(COMMON_WARNINGS) $(ARCH_FLAGS)
+CXXFLAGS	= $(HPC_CXXFLAGS) $(IFLAGS) $(UNIFIED_DEF) $(OPT_FLAG) $(COMMON_WARNINGS) $(STDINT_MACROS) $(ARCH_FLAGS)
 LDFLAGS		= $(ARCH_FLAGS)
 
 # flags for kludge files, won't have warnings generated
