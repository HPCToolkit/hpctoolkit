Change #include <libelf.h> to "libelf/libelf.h" in source files and
rework configure to test for this style.  This is how libelf installs
itself natively.  The danger is that symtab will use libelf.h from
/usr/include instead of the one in externals.


diff -Naurb SymtabAPI-8.0.orig/configure SymtabAPI-8.0/configure
--- SymtabAPI-8.0.orig/configure	2012-11-20 15:32:26.000000000 -0600
+++ SymtabAPI-8.0/configure	2012-11-29 23:33:03.000000000 -0600
@@ -4776,6 +4776,7 @@
       CXXFLAGS="$CXXFLAGS $LIBELF_INCFLAGS";
       CPPFLAGS="$CPPFLAGS $LIBELF_INCFLAGS";
 
+      if true ; then
       { $as_echo "$as_me:$LINENO: checking for egrep" >&5
 $as_echo_n "checking for egrep... " >&6; }
 if test "${ac_cv_path_EGREP+set}" = set; then
@@ -5096,7 +5097,151 @@
 done
 
 
-if test "${ac_cv_header_libelf_h+set}" = set; then
+if test "${ac_cv_header_libelf_libelf_h+set}" = set; then
+  { $as_echo "$as_me:$LINENO: checking for libelf/libelf.h" >&5
+$as_echo_n "checking for libelf/libelf.h... " >&6; }
+if test "${ac_cv_header_libelf_libelf_h+set}" = set; then
+  $as_echo_n "(cached) " >&6
+fi
+{ $as_echo "$as_me:$LINENO: result: $ac_cv_header_libelf_libelf_h" >&5
+$as_echo "$ac_cv_header_libelf_libelf_h" >&6; }
+else
+  # Is the header compilable?
+{ $as_echo "$as_me:$LINENO: checking libelf/libelf.h usability" >&5
+$as_echo_n "checking libelf/libelf.h usability... " >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+#include <libelf/libelf.h>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+$as_echo "$ac_try_echo") >&5
+  (eval "$ac_compile") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_header_compiler=yes
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_header_compiler=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ $as_echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
+$as_echo "$ac_header_compiler" >&6; }
+
+# Is the header present?
+{ $as_echo "$as_me:$LINENO: checking libelf/libelf.h presence" >&5
+$as_echo_n "checking libelf/libelf.h presence... " >&6; }
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <libelf/libelf.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:$LINENO: $ac_try_echo\""
+$as_echo "$ac_try_echo") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  $as_echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  ac_header_preproc=yes
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  ac_header_preproc=no
+fi
+
+rm -f conftest.err conftest.$ac_ext
+{ $as_echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
+$as_echo "$ac_header_preproc" >&6; }
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc:$ac_cxx_preproc_warn_flag in
+  yes:no: )
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h: accepted by the compiler, rejected by the preprocessor!" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h: proceeding with the compiler's result" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h: proceeding with the compiler's result" >&2;}
+    ac_header_preproc=yes
+    ;;
+  no:yes:* )
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h: present but cannot be compiled" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h: present but cannot be compiled" >&2;}
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h:     check for missing prerequisite headers?" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h:     check for missing prerequisite headers?" >&2;}
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h: see the Autoconf documentation" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h: see the Autoconf documentation" >&2;}
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h:     section \"Present But Cannot Be Compiled\"" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h:     section \"Present But Cannot Be Compiled\"" >&2;}
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h: proceeding with the preprocessor's result" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h: proceeding with the preprocessor's result" >&2;}
+    { $as_echo "$as_me:$LINENO: WARNING: libelf/libelf.h: in the future, the compiler will take precedence" >&5
+$as_echo "$as_me: WARNING: libelf/libelf.h: in the future, the compiler will take precedence" >&2;}
+    ( cat <<\_ASBOX
+## ------------------------------- ##
+## Report this to bugs@dyninst.org ##
+## ------------------------------- ##
+_ASBOX
+     ) | sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+esac
+{ $as_echo "$as_me:$LINENO: checking for libelf/libelf.h" >&5
+$as_echo_n "checking for libelf/libelf.h... " >&6; }
+if test "${ac_cv_header_libelf_libelf_h+set}" = set; then
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_header_libelf_libelf_h=$ac_header_preproc
+fi
+{ $as_echo "$as_me:$LINENO: result: $ac_cv_header_libelf_libelf_h" >&5
+$as_echo "$ac_cv_header_libelf_libelf_h" >&6; }
+
+fi
+if test "x$ac_cv_header_libelf_libelf_h" = x""yes; then
+  { $as_echo "$as_me:$LINENO: ELF include directory: $LIBELF_INC_DIR" >&5
+$as_echo "$as_me: ELF include directory: $LIBELF_INC_DIR" >&6;}
+else
+  { { $as_echo "$as_me:$LINENO: error: invalid ELF include directory: $LIBELF_INC_DIR" >&5
+$as_echo "$as_me: error: invalid ELF include directory: $LIBELF_INC_DIR" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+
+      else
+
+      if test "${ac_cv_header_libelf_h+set}" = set; then
   { $as_echo "$as_me:$LINENO: checking for libelf.h" >&5
 $as_echo_n "checking for libelf.h... " >&6; }
 if test "${ac_cv_header_libelf_h+set}" = set; then
@@ -5381,6 +5526,8 @@
 
 
 
+      fi
+
       CXXFLAGS=$CXXFLAGS_HOLD
       CPPFLAGS=$CPPFLAGS_HOLD
 
diff -Naurb SymtabAPI-8.0.orig/configure.in SymtabAPI-8.0/configure.in
--- SymtabAPI-8.0.orig/configure.in	2012-11-20 15:32:26.000000000 -0600
+++ SymtabAPI-8.0/configure.in	2012-11-29 23:32:56.000000000 -0600
@@ -194,6 +194,12 @@
       CXXFLAGS="$CXXFLAGS $LIBELF_INCFLAGS";
       CPPFLAGS="$CPPFLAGS $LIBELF_INCFLAGS";
 
+      if true ; then
+         AC_CHECK_HEADER([libelf/libelf.h],
+	    [AC_MSG_NOTICE([ELF include directory: $LIBELF_INC_DIR])],
+	    [AC_ERROR([invalid ELF include directory: $LIBELF_INC_DIR])])
+      else
+
       AC_CHECK_HEADER([libelf.h], [AC_MSG_NOTICE(ELF include directory: $LIBELF_INC_DIR)],
            [CXXFLAGS="$CXXFLAGS $LIBELF_ALT_INCFLAGS"
             CPPFLAGS="$CPPFLAGS $LIBELF_ALT_INCFLAGS"
@@ -202,6 +208,8 @@
                             [LIBELF_INC_DIR=$LIBELF_ALT_INC_DIR;AC_MSG_NOTICE(ELF include directory: $LIBELF_INC_DIR)],
                             [AC_ERROR(couldn't find libelf.h: $CPPFLAGS)])])
 
+      fi
+
       CXXFLAGS=$CXXFLAGS_HOLD
       CPPFLAGS=$CPPFLAGS_HOLD
       PD_CHECK_LIB_DIR($LIBELF_LIB_DIR,[elf],[elf_memory])
diff -Naurb SymtabAPI-8.0.orig/elf/h/Elf_X.h SymtabAPI-8.0/elf/h/Elf_X.h
--- SymtabAPI-8.0.orig/elf/h/Elf_X.h	2012-11-20 15:32:26.000000000 -0600
+++ SymtabAPI-8.0/elf/h/Elf_X.h	2012-11-29 23:37:48.000000000 -0600
@@ -31,7 +31,7 @@
 #ifndef __ELF_X_H__
 #define __ELF_X_H__
 
-#include "libelf.h"
+#include "libelf/libelf.h"
 
 namespace Dyninst {
 
diff -Naurb SymtabAPI-8.0.orig/symtabAPI/src/Object-elf.h SymtabAPI-8.0/symtabAPI/src/Object-elf.h
--- SymtabAPI-8.0.orig/symtabAPI/src/Object-elf.h	2012-11-20 15:32:27.000000000 -0600
+++ SymtabAPI-8.0/symtabAPI/src/Object-elf.h	2012-11-29 23:35:12.000000000 -0600
@@ -55,7 +55,7 @@
 
 
 #include <elf.h>
-#include <libelf.h>
+#include "libelf/libelf.h"
 #include <string>
 
 #include "elf/h/Elf_X.h"
diff -Naurb SymtabAPI-8.0.orig/symtabAPI/src/dwarfWalker.h SymtabAPI-8.0/symtabAPI/src/dwarfWalker.h
--- SymtabAPI-8.0.orig/symtabAPI/src/dwarfWalker.h	2012-11-20 15:32:27.000000000 -0600
+++ SymtabAPI-8.0/symtabAPI/src/dwarfWalker.h	2012-11-29 23:36:15.000000000 -0600
@@ -3,7 +3,7 @@
 #define _dwarf_walker_h_
 
 #include "elf.h"
-#include "libelf.h"
+#include "libelf/libelf.h"
 #include "libdwarf.h"
 #include <stack>
 #include <vector>
diff -Naurb SymtabAPI-8.0.orig/symtabAPI/src/parseDwarf.C SymtabAPI-8.0/symtabAPI/src/parseDwarf.C
--- SymtabAPI-8.0.orig/symtabAPI/src/parseDwarf.C	2012-11-20 15:32:27.000000000 -0600
+++ SymtabAPI-8.0/symtabAPI/src/parseDwarf.C	2012-11-29 23:36:38.000000000 -0600
@@ -30,7 +30,7 @@
 #include <map>
 
 #include "elf.h"
-#include "libelf.h"
+#include "libelf/libelf.h"
 #include "dwarf.h"
 #include "libdwarf.h"
 #include "dwarf/h/dwarfExprParser.h"
