Fix parse_all_relocations() in Object-elf.C to handle the new
STT_GNU_IFUNC symbols.  This was causing symtabAPI to segfault on
static binaries using the latest glibc on systems such as
jaguarpf/interlagos.

This patch is a minimal diff from the symtab git tree.


diff -Naurb symtabAPI.orig/src/dyninst/symtabAPI/src/Object-elf.C symtabAPI/src/dyninst/symtabAPI/src/Object-elf.C
--- symtabAPI.orig/src/dyninst/symtabAPI/src/Object-elf.C	2012-09-12 15:07:47.000000000 -0500
+++ symtabAPI/src/dyninst/symtabAPI/src/Object-elf.C	2012-09-12 15:32:18.000000000 -0500
@@ -5452,28 +5452,28 @@
 
             // Determine which symbol table to use
             Symbol *sym = NULL;
-            if( curSymHdr->sh_offset() == dynsym_offset ) {
+            if( dynstr && curSymHdr->sh_offset() == dynsym_offset ) {
                 name = string( &dynstr[dynsym.st_name(symbol_index)] );
 
                 dyn_hash_map<int, Symbol *>::iterator sym_it;
                 sym_it = dynsymByIndex.find(symbol_index);
                 if( sym_it != dynsymByIndex.end() ) {
                     sym = sym_it->second;
+   	 	    if(sym->getType() == Symbol::ST_SECTION) {
+			name = sym->getSec()->getRegionName().c_str();
                 }
-            }else if( curSymHdr->sh_offset() == symtab_offset ) {
+                }
+            }else if( strtab && curSymHdr->sh_offset() == symtab_offset ) {
                 name = string( &strtab[symtab.st_name(symbol_index)] );
 
                 dyn_hash_map<int, Symbol *>::iterator sym_it;
                 sym_it = symtabByIndex.find(symbol_index);
                 if( sym_it != symtabByIndex.end() ) {
                     sym = sym_it->second;
+   	 	    if(sym->getType() == Symbol::ST_SECTION) {
+			name = sym->getSec()->getRegionName().c_str();
+		    }
                 }
-            }else{
-                fprintf(stderr, "%s[%d]: warning: unknown symbol table "
-                        "referenced in relocation entry: sh_offset = %lu symtab_offset = %lu "
-                        "dynsym_offset = %lu\n", FILE__, __LINE__, curSymHdr->sh_offset(),
-                        symtab_offset, dynsym_offset);
-                continue;
             }
 
 	    Region *region = NULL;
@@ -5490,7 +5490,7 @@
 	   
             // relocations are also stored with their targets
             // Need to find target region
-	    if (shdr->sh_info() != 0) {
+	    if (sym && shdr->sh_info() != 0) {
             	    Region *targetRegion = NULL;
 	            shToReg_it = shToRegion.find(shdr->sh_info());
         	    if( shToReg_it != shToRegion.end() ) {
