Fix the types in two iterators in emitElfStatic-ppc32.C.  Symtab uses
'auto' for this now.  This was breaking the build on 32-bit powerpc.


diff -Naurb dyninst.orig/symtabAPI/src/emitElfStatic-ppc32.C dyninst/symtabAPI/src/emitElfStatic-ppc32.C
--- dyninst.orig/symtabAPI/src/emitElfStatic-ppc32.C	2014-03-12 18:20:10.000000000 -0500
+++ dyninst/symtabAPI/src/emitElfStatic-ppc32.C	2014-03-17 17:00:11.452036343 -0500
@@ -502,8 +502,7 @@
 
     pair<map<Region *, LinkMap::AllocPair>::iterator, bool> result;
 
-    vector<Region *>::iterator reg_it;
-    for(reg_it = lmap.newCtorRegions.begin(); reg_it != lmap.newCtorRegions.end(); ++reg_it) {
+    for(auto reg_it = lmap.newCtorRegions.begin(); reg_it != lmap.newCtorRegions.end(); ++reg_it) {
         result = lmap.regionAllocs.insert(make_pair(*reg_it, make_pair(0, retOffset)));
 
         // If the map already contains this Region, this is a logic error
@@ -581,8 +580,7 @@
         retOffset += lmap.originalDtorRegion->getDiskSize() - addressWidth_ - addressWidth_;
     }
 
-    vector<Region *>::iterator reg_it;
-    for(reg_it = lmap.newDtorRegions.begin(); reg_it != lmap.newDtorRegions.end(); ++reg_it) {
+    for(auto reg_it = lmap.newDtorRegions.begin(); reg_it != lmap.newDtorRegions.end(); ++reg_it) {
         result = lmap.regionAllocs.insert(make_pair(*reg_it, make_pair(0, retOffset)));
 
         // If the map already contains this Region, this is a logic error
