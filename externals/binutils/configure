#!/bin/sh
#
#  Binutils configure.
#
#  $Id$
#

PKG_NAME=binutils
src=version-binutils-2.17/binutils-2.17

. ../build-utils/configure.inc
pre_configure

targets='mips64-sgi-irix6, alpha-*-linux-gnu, alpha-*-osf, sparc32-*-elf, sparc64-*-solaris2, i386-*-linux-gnu, x86_64-*-linux-gnu, ia64-*-linux-gnu, powerpc64-*-linux-gnu'

export CC="$CC"
export CFLAGS="$CFLAGS"
set -- \
    --prefix="$prefix" \
    --enable-targets="${targets}" \
    "$@"
if test -n "${is_cross_compile}" ; then
    set -- --host="${host}" "$@"
fi

make_work_dir
cd work || die "unable to cd: work"
work_dir=`pwd`

# NOTE: this must come after 'make_work_dir' or 'make_work_dir' breaks
cd "../${src}" || die "unable to cd: ${src}"
src=`pwd`

# The top-level configure for binutils 2.17 does *not* pass along
# --host to its sub-configures.  Erg!  So instead of just doing one
# top-level configure, we configure for each subdir.

dirs="libiberty bfd opcodes intl binutils"
for x in . ${dirs}; do
    echo "=> ${x}/configure $@"
    mkdir -p ${work_dir}/${x} || die "unable to mkdir: ${work_dir}/${x}"
    cd ${work_dir}/${x}
    ${src}/${x}/configure "$@"
    test $? -eq 0 || die "configure in ${x} failed"
done

post_configure
