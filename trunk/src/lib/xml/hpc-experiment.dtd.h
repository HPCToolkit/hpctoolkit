"<!-- ******************************************************************** -->\n<!-- HPCToolkit Experiment DTD						  -->\n<!-- Version 1.5							  -->\n<!-- ******************************************************************** -->\n<!ELEMENT HPCToolkitExperiment (Header, (SecCallPathProfile|SecFlatProfile)*)>\n<!ATTLIST HPCToolkitExperiment\n	  version CDATA #REQUIRED>\n\n  <!-- ****************************************************************** -->\n\n  <!-- Info/NV: flexible name-value pairs: (n)ame, (t)ype, (v)alue -->\n  <!ELEMENT Info (NV*)>\n  <!ELEMENT NV EMPTY>\n  <!ATTLIST NV\n	    n CDATA #REQUIRED\n	    t CDATA #IMPLIED\n	    v CDATA #REQUIRED>\n\n  <!-- ****************************************************************** -->\n  <!-- Header								  -->\n  <!-- ****************************************************************** -->\n  <!ELEMENT Header (Info)>\n  <!ATTLIST Header\n	    nm CDATA #REQUIRED>\n\n  <!-- ****************************************************************** -->\n  <!-- Section Header							  -->\n  <!-- ****************************************************************** -->\n  <!ELEMENT SecHeader (MetricTable?, LoadModuleTable?, FileTable?, ProcedureTable?, Info)>\n\n    <!-- MetricTable defines Metrics for this section -->\n    <!ELEMENT MetricTable (Metric)*>\n\n    <!ELEMENT Metric (MetricFormula?, Info?) >\n    <!ATTLIST Metric\n	      id      CDATA #REQUIRED\n	      nm      CDATA #REQUIRED\n	      fmt     CDATA #IMPLIED\n	      show    (1|0) \"1\">\n\n    <!-- MetricFormula represents derived metrics -->\n    <!ELEMENT MetricFormula (Info)?>\n    <!ATTLIST MetricFormula\n	      form    CDATA #REQUIRED\n	      type    CDATA #IMPLIED>\n\n    <!-- Metric data, used in sections: (n)ame [from MetricTable]; (v)alue -->\n    <!ELEMENT M EMPTY>\n    <!ATTLIST M\n	      n  CDATA #REQUIRED\n	      v  CDATA #REQUIRED>\n\n    <!-- LoadModuleTable assigns a short name to a load module -->\n    <!ELEMENT LoadModuleTable (LoadModule)*>\n\n    <!ELEMENT LoadModule (Info?) >\n    <!ATTLIST LoadModule\n	      id      CDATA #REQUIRED\n	      nm      CDATA #REQUIRED>\n\n    <!-- FileTable assigns a short name to a file -->\n    <!ELEMENT FileTable (File)*>\n\n    <!ELEMENT File (Info?) >\n    <!ATTLIST File\n	      id      CDATA #REQUIRED\n	      nm      CDATA #REQUIRED>\n\n    <!-- ProcedureTable assigns a short name to a procedure -->\n    <!ELEMENT ProcedureTable (Procedure)*>\n\n    <!ELEMENT Procedure (Info?) >\n    <!ATTLIST Procedure\n	      id      CDATA #REQUIRED\n	      nm      CDATA #REQUIRED>\n\n  <!-- ****************************************************************** -->\n  <!-- Section: Call path profile					  -->\n  <!-- ****************************************************************** -->\n  <!ELEMENT SecCallPathProfile (SecHeader, SecCallPathProfileData)>\n  <!ATTLIST SecCallPathProfile\n	    id  CDATA #REQUIRED\n	    nm  CDATA #REQUIRED>\n\n    <!ELEMENT SecCallPathProfileData (P)*>\n      <!-- Procedure frame/activation -->\n      <!--   (i)d: unique identifier for cross referencing -->\n      <!--   (s)tatic scope id -->\n      <!--   (n)ame: a string or an id in ProcedureTable -->\n      <!--   (lm) load module: a string or an id in LoadModuleTable -->\n      <!--   (f)ile name: a string or an id in LoadModuleTable -->\n      <!--   (l)ine range: \"beg-end\" -->\n      <!--   (a)lien: whether frame is alien to enclosing P -->\n      <!--   (v)ma-range-set: \"{[beg-end), [beg-end)}\" -->\n      <!ELEMENT P (L|C|S|M)*>\n      <!ATTLIST P\n		i  CDATA #IMPLIED\n		s  CDATA #IMPLIED\n		n  CDATA #REQUIRED\n		lm CDATA #IMPLIED\n		f  CDATA #IMPLIED\n		l  CDATA #IMPLIED\n		a  (1|0) \"0\"\n		v  CDATA #IMPLIED>\n      <!-- Loop -->\n      <!ELEMENT L (L|C|S|M)*>\n      <!ATTLIST L\n		i  CDATA #IMPLIED\n		s  CDATA #IMPLIED\n		l  CDATA #IMPLIED\n		v  CDATA #IMPLIED>\n      <!-- Statement Range -->\n      <!ELEMENT S (S|M)*>\n      <!ATTLIST S\n		i  CDATA #IMPLIED\n		s  CDATA #IMPLIED\n		l  CDATA #IMPLIED\n		v  CDATA #IMPLIED>\n      <!-- Callsite (a special StatementRange) -->\n      <!ELEMENT C (P)*>\n      <!ATTLIST C\n		i  CDATA #IMPLIED\n		s  CDATA #IMPLIED\n		l  CDATA #IMPLIED\n		v  CDATA #IMPLIED>\n\n  <!-- ****************************************************************** -->\n  <!-- Section: Flat profile						  -->\n  <!-- ****************************************************************** -->\n  <!ELEMENT SecFlatProfile (SecHeader, SecFlatProfileData)>\n  <!ATTLIST SecFlatProfile\n	    id  CDATA #REQUIRED\n	    nm  CDATA #REQUIRED>\n\n    <!ELEMENT SecFlatProfileData (LM|F|Ps|M)*>\n      <!-- Load module: (n)ame, (v)ma-range-set -->\n      <!ELEMENT LM (F|Ps|M)*>\n      <!ATTLIST LM\n                i  CDATA #IMPLIED\n                n  CDATA #REQUIRED\n		v  CDATA #IMPLIED>\n      <!-- File: (n)ame -->\n      <!ELEMENT F (Ps|L|S|M)*>\n      <!ATTLIST F\n                i  CDATA #IMPLIED\n                n  CDATA #REQUIRED>\n      <!-- Procedure, static: (l)ine range: \"beg-end\" -->\n      <!ELEMENT Ps (Ps|L|S|A|M)*>\n      <!ATTLIST Ps\n                i  CDATA #IMPLIED\n                n  CDATA #REQUIRED\n                l  CDATA #IMPLIED\n		v  CDATA #IMPLIED>\n      <!-- Alien: (f)ile name; (p)rocedure name -->\n      <!ELEMENT A (A|L|S|M)*>\n      <!ATTLIST A\n                i  CDATA #IMPLIED\n                f  CDATA #IMPLIED\n                p  CDATA #IMPLIED\n                l  CDATA #IMPLIED\n		v  CDATA #IMPLIED>\n      <!-- Loop: use L (May forbid any contained Cs to contain a P) -->\n      <!-- Statement Range: use S -->\n";
