#!/bin/sh

# Relative paths are relative to HPCTOOLKIT.
ext_libs_dir='@hpc_ext_libs_dir@'
stapi_syms_dir='libexec/hpctoolkit'

# Should be absolute path.
libcpp_path='@hpcrun_libcpp_path@'

############ UTILITY FUNCTIONS #################

dbg()
{
    if [ $dbg_script ]; then
	echo "CSPROF_SYMS:" "$@"
    fi
}

run_stapi_syms()
{
   lib_path="${ext_libs_dir}:${libcpp_path}"

   if LD_LIBRARY_PATH="$lib_path" "${stapi_syms_dir}/stapi_syms" $1 > "$prog_file"
   then :
   else
     rm -f $prog_file
   fi
   return
}

############ MAIN CODE ###################

hpc_path_to_root=../..
@export_hpctoolkit@

# Relative paths are relative to HPCTOOLKIT.
case "$ext_libs_dir" in
    /* ) ;;
    * )  ext_libs_dir="${HPCTOOLKIT}/${ext_libs_dir}" ;;
esac
case "$stapi_syms_dir" in
    /* ) ;;
    * )  stapi_syms_dir="${HPCTOOLKIT}/${stapi_syms_dir}" ;;
esac

base=`basename $1`

# output directory
if test "$2"x == "x"; then
    odir=/tmp
else
    odir=$2
    if [ $dbg_script ]; then
	chmod +rx $odir
    fi
fi

# debug script
dbg_script=$3

dbg args = "$@"

OLDIFS=${IFS}
IFS=':'

# set default object file in case real one not found 
object_file=/dev/null

if [ -r $1 ]; then
  object_file=$1
else
   for d in ${LD_LIBRARY_PATH}; do
      if [ -r ${d}/${base} ]; then
         object_file=${d}/${base} 
         break;
      fi
   done
fi
IFS=${OLDIFS}

prog_file=${odir}/${base}.nm.c
so_file=${odir}/${base}.nm.so

dbg object_file = $object_file
dbg prog_file = $prog_file

run_stapi_syms $object_file
if [ ! -s $prog_file ]; then
    echo stapi_syms create $prog_file from $object_file failed ... 
    echo ... trying stripped version
    dbg doing cp $object_file $odir';' strip $odir/$base
    dbg umask = `umask -S -p`
    cp $object_file $odir

    dbg version of strip = `which strip`
    dbg permissions for object file = `ls -l $odir/$base`

    chmod u+w $odir/$base
    dbg permissions for object file AFTER CHMOD = `ls -l $odir/$base`

    strip $odir/$base
    run_stapi_syms $odir/$base
    if [ -s $prog_file ]; then
        echo stripping succeeds '!!'. $prog_file exists
    else
        echo stapi_syms tried stripping $object_file, but that failed also ...
	rm -f /tmp/_s.$$
	echo creating default $prog_file
	cat <<EOF > $prog_file
int BOGUS = 1;
unsigned int csprof_stripped = 1;
EOF
    fi
fi
gcc ${prog_file} -fPIC -shared -nostartfiles -o ${so_file}
