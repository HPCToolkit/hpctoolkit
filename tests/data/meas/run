#!/bin/sh -e

# SPDX-FileCopyrightText: 2022-2024 Rice University
# SPDX-FileCopyrightText: 2024 Contributors to the HPCToolkit Project
#
# SPDX-License-Identifier: BSD-3-Clause

hpcrun="$1"
hpcstruct="$2"
min_samples="$3"
output_stamp="$4"
shift 4  # Remaining arguments go to hpcrun

output="$(dirname "$output_stamp")/$(basename "$output_stamp" .fresh)"

try_gen() {
  # Attempt to generate some (good) measurements
  rm -rf "$output"
  "$hpcrun" -o "$output" "$@"

  # Check that there are enough samples to go around
  samples=$(
    grep -E 'SUMMARY:[[:space:]]+samples:[[:space:]]+[[:digit:]]+[[:space:]]+\(recorded:[[:space:]]+[[:digit:]]+' "$output"/*.log \
    | grep -Eo 'recorded:[[:space:]]+[[:digit:]]+' \
    | grep -Eo -m1 '[[:digit:]]+')
  if [ -z "$samples" ]; then samples=0; fi
  printf '%s' "Collected $samples samples...  "
  if [ "$samples" -lt "$min_samples" ]; then echo "FAIL, need >= $min_samples"; return 1; fi
  echo "OK"

  # Measurements look good! We'll use these.
  return 0
}

ok=
for _attempt in 1 2 3 4 5 6 7 8 9 10; do
  if try_gen "$@"; then
    ok=yes
    break
  fi
done
if [ -z "$ok" ]; then
  echo "Failed to generate good measurements after 10 attempts, giving up."
  exit 1
fi

# Analyze all the binaries used during the run. This will generate a structs/ subdirectory.
"$hpcstruct" --gpucfg=yes --nocache "$output"

# Clean up all non-essential files
rm -rf \
  "$output"/cpubins/ \
  "$output"/gpubins-used/ \
  # END
rm -f \
  "$output"/*.log \
  "$output"/all.lm \
  "$output"/structs/*.warnings \
  "$output"/structs/Makefile \
  # END

# Write a marker for the output directory, so we can do remapping later
realpath "$output" > "$output"/original-path

# Create/update the stampfile
date > "$output_stamp"
