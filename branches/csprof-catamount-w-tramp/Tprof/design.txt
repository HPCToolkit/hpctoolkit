This is a library for use by other apps. It may be statically linked,
or used in a LD_PRELOAD. [Maybe even in an attach mode in the future]

Initialization done by (lib)monitor component callbacks

Process init callback:
   getargs (f envi vars) to determine various flavors of operation
   immunize = override system functions that interfere with profiling
       functions to override
           itimer
           sigaction + friends
           malloc, calloc, realloc [unless using mmap]
       override in static context requires objcopy renaming + ??
   general init

General init
   init sampling data structs
       likely different f flat vs call stack profiling
       loop on each metric for multiple metrics

   initialize epoch handling, and other output file stuff
       may be different f flat v cspr

   set up handlers
       heartbeat profile source
       segv
       other??

   set up & start heartbeat/interrupt mechanism
       
Thread init callback
   general init
      -- maybe epoch handling stuff is process init

Thread final
   stop thread-specific signal stuff
   write out thread sample data

Process final
   stop any process specific signal stuff
   write out process sample data

Signal handler
   capture pc + other data
       determine type of metric (if using multiple metrics)
       unwind if in csprof mode
       store sample in data struc (red black trees f csprof)
   reset signal stuff (if necessary)

